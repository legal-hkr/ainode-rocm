### AINode app
name: ainode

## Common part for all the containers
x-common: &common
    logging:
      driver: none

## Common part for all the containers requiring access to GPU
x-common-render: &common-render
    devices:
      - /dev/kfd
      - /dev/dri
    logging:
      driver: none

services:

  ## DB - databases

  # ChromaDB
  chroma:
    <<: *common
    build:
      args:
        # UID and GID for the user, can be the same as for the local user
        user_uid: 1000
        user_gid: 100
      dockerfile: ./docker/chroma/Dockerfile
    container_name: ainode-chroma
    hostname: ainode-chroma
    networks:
      - ainode-internal
    restart: unless-stopped
    volumes:
      - ./data/chroma:/home/user/app/chroma
      - type: tmpfs
        target: /home/user/.cache
        tmpfs:
          mode: 01777
      - type: tmpfs
        target: /tmp
        tmpfs:
          mode: 01777

  ## Infra - infastructure related

  # Remote Desktop
  desktop:
    <<: *common-render
    build:
      args:
        # Name, UID and GID for the user, can be the same as for the local user
        username: hkr
        user_uid: 1000
        user_gid: 100
        # Host's GID of the 'video' group, on Gentoo it's 27, on Debian it's 44
        # For AMD cards on Gentoo, the 'render' group is also needed (GID for /dev/kfd)
        render_gid: 28
        video_gid: 27
      dockerfile: ./docker/desktop/Dockerfile
    container_name: ainode-desktop
    hostname: ainode-desktop
    ipc: host
    networks:
      - ainode-internal
    ports:
      - 3389:3389
    security_opt:
      - seccomp:unconfined
    volumes:
      # User's home directory - make sure that path involves proper username, same for .cache
      - ./data/desktop/home:/home/hkr
      - type: tmpfs
        target: /home/hkr/.cache
        tmpfs:
          mode: 01777
      - type: tmpfs
        target: /tmp
        tmpfs:
          mode: 01777

  # Nginx (reverse proxy)
  reverseproxy:
    <<: *common
    build:
      dockerfile: ./docker/reverseproxy/Dockerfile
    container_name: ainode-reverseproxy
    depends_on:
      - ollama
      - comfyui
      - openwebui
    hostname: ainode-reverseproxy
    networks:
      - ainode-internal
    ports:
      - 80:80
      - 443:443
      - 5000:5000
      - 11434:11434
    restart: unless-stopped
    volumes:
      - ./data/reverseproxy/sites-enabled:/etc/nginx/sites-enabled
      - ./ssl:/etc/nginx/certs
      - type: tmpfs
        target: /tmp
        tmpfs:
          mode: 01777

  ## LLM - text generation related

  # Ollama (API)
  ollama:
    <<: *common-render
    build:
      args:
        # UID and GID for the user, can be the same as for the local user
        user_uid: 1000
        user_gid: 100
        # Host's GID of the 'video' group, on Gentoo it's 27, on Debian it's 44
        # For AMD cards on Gentoo, the 'render' group is also needed (GID for /dev/kfd)
        render_gid: 28
        video_gid: 27
      dockerfile: ./docker/ollama/Dockerfile
    container_name: ainode-ollama
    hostname: ainode-ollama
    networks:
      - ainode-internal
    restart: unless-stopped
    # The only way to set 'exec' on tmpfs is to use old syntax
    tmpfs:
      - /home/user/tmp:exec,mode=01777
    volumes:
      - ./data/ollama:/home/user/.ollama
      - type: tmpfs
        target: /home/user/.cache
        tmpfs:
          mode: 01777
      - type: tmpfs
        target: /tmp
        tmpfs:
          mode: 01777

  ## SD - stable diffusion related

  # ComfyUI (WebUI, API)
  comfyui:
    <<: *common-render
    build:
      args:
        # UID and GID for the user, can be the same as for the local user
        user_uid: 1000
        user_gid: 100
        # GID of the 'video' group, in Gentoo it's 27, on Debian it's 44
        # For AMD cards on Gentoo, the 'render' group is also needed (GID for /dev/kfd is 28)
        render_gid: 28
        video_gid: 27
      dockerfile: ./docker/comfyui/Dockerfile
    container_name: ainode-comfyui
    hostname: ainode-comfyui
    networks:
      - ainode-internal
    restart: unless-stopped
    volumes:
      - ./data/comfyui/config:/home/user/app/user/default
      - ./data/comfyui/custom_nodes:/home/user/app/custom_nodes
      - ./data/common/models:/home/user/app/models
      - type: tmpfs
        target: /home/user/.cache
        tmpfs:
          mode: 01777
      - type: tmpfs
        target: /home/user/app/input
        tmpfs:
          mode: 01777
      - type: tmpfs
        target: /home/user/app/output
        tmpfs:
          mode: 01777
      - type: tmpfs
        target: /tmp
        tmpfs:
          mode: 01777

  ## TTS - Text to Speach related

  # Kokoro FastAPI (API)
  kokoro-fastapi:
    <<: *common-render
    build:
      args:
        # UID and GID for the user, can be the same as for the local user
        user_uid: 1000
        user_gid: 100
        # GID of the 'video' group, in Gentoo it's 27, on Debian it's 44
        # For AMD cards on Gentoo, the 'render' group is also needed (GID for /dev/kfd is 28)
        render_gid: 28
        video_gid: 27
      dockerfile: ./docker/kokoro-fastapi/Dockerfile
    container_name: ainode-kokoro-fastapi
    hostname: ainode-kokoro-fastapi
    networks:
      - ainode-internal
    restart: unless-stopped
    # Ugly workaround, adding options to tmpfs mount is allowed only for short format
    tmpfs:
      - /tmp:exec
    volumes:
      - type: tmpfs
        target: /home/user/.cache
        tmpfs:
          mode: 01777
      - type: tmpfs
        target: /home/user/app/output
        tmpfs:
          mode: 01777

  ## UI - User Interface, usually Web-based

  # Open WebUI (WebUI, API)
  openwebui:
    <<: *common-render
    build:
      args:
        # UID and GID for the user, can be the same as for the local user
        user_uid: 1000
        user_gid: 100
      dockerfile: ./docker/openwebui/Dockerfile
    container_name: ainode-openwebui
    depends_on:
      - chroma
    hostname: ainode-openwebui
    networks:
      - ainode-internal
    restart: unless-stopped
    volumes:
      - ./data/openwebui/data:/home/user/app/backend/data
      - type: tmpfs
        target: /home/user/.cache
        tmpfs:
          mode: 01777
      - type: tmpfs
        target: /home/user/app/backend/data/cache
        tmpfs:
          mode: 01777
      - type: tmpfs
        target: /tmp
        tmpfs:
          mode: 01777

  # Open WebUI - Amnesic (WebUI, API)
  openwebui-amnesic:
    <<: *common-render
    build:
      args:
        # UID and GID for the user, can be the same as for the local user
        user_uid: 1000
        user_gid: 100
      dockerfile: ./docker/openwebui-amnesic/Dockerfile
    container_name: ainode-openwebui-amnesic
    hostname: ainode-openwebui-amnesic
    networks:
      - ainode-internal
    ports:
      - 8443:8080
    restart: unless-stopped
    volumes:
      - ./ssl:/home/user/app/ssl
      - type: tmpfs
        target: /home/user/.cache
        tmpfs:
          mode: 01777
      - type: tmpfs
        target: /home/user/app/backend/data
        tmpfs:
          mode: 01777
      - type: tmpfs
        target: /tmp
        tmpfs:
          mode: 01777

networks:
  ainode-internal:
    driver: bridge
    name: ainode-internal
